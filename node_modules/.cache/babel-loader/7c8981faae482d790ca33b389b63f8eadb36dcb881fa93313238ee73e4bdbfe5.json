{"ast":null,"code":"export default {\n  data() {\n    return {\n      novaCategoria: {\n        nome: '',\n        descricao: ''\n      },\n      novoTipo: {\n        nome: '',\n        descricao: ''\n      },\n      categorias: [],\n      tipos: [],\n      editandoCategoriaId: null,\n      editandoTipoId: null,\n      mensagem: '',\n      tipoMensagem: ''\n    };\n  },\n  mounted() {\n    this.carregarCategorias();\n    this.carregarTipos();\n  },\n  methods: {\n    async carregarCategorias() {\n      const res = await fetch('http://localhost:3000/api/categorias');\n      this.categorias = await res.json();\n    },\n    async carregarTipos() {\n      const res = await fetch('http://localhost:3000/api/tipos');\n      this.tipos = await res.json();\n    },\n    async adicionarCategoria() {\n      const url = this.editandoCategoriaId ? `http://localhost:3000/api/categorias/${this.editandoCategoriaId}` : 'http://localhost:3000/api/categorias';\n      const method = this.editandoCategoriaId ? 'PUT' : 'POST';\n      try {\n        const res = await fetch(url, {\n          method,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.novaCategoria)\n        });\n        const body = await res.json();\n        if (!res.ok) throw new Error(body.message || res.statusText);\n        this.mensagem = this.editandoCategoriaId ? 'Categoria atualizada com sucesso!' : 'Categoria adicionada com sucesso!';\n        this.tipoMensagem = 'sucesso';\n        this.novaCategoria = {\n          nome: '',\n          descricao: ''\n        };\n        this.editandoCategoriaId = null;\n        this.carregarCategorias();\n      } catch (err) {\n        this.mensagem = err.message;\n        this.tipoMensagem = 'erro';\n      }\n    },\n    editarCategoria(categoria) {\n      this.novaCategoria = {\n        ...categoria\n      };\n      this.editandoCategoriaId = categoria._id;\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    async apagarCategoria(id) {\n      if (confirm('Deseja realmente apagar esta categoria?')) {\n        try {\n          const res = await fetch(`http://localhost:3000/api/categorias/${id}`, {\n            method: 'DELETE'\n          });\n          if (!res.ok) throw new Error('Erro ao apagar categoria');\n          this.mensagem = 'Categoria apagada com sucesso!';\n          this.tipoMensagem = 'sucesso';\n          this.carregarCategorias();\n        } catch (err) {\n          this.mensagem = err.message;\n          this.tipoMensagem = 'erro';\n        }\n      }\n    },\n    async adicionarTipo() {\n      const url = this.editandoTipoId ? `http://localhost:3000/api/tipos/${this.editandoTipoId}` : 'http://localhost:3000/api/tipos';\n      const method = this.editandoTipoId ? 'PUT' : 'POST';\n      try {\n        const res = await fetch(url, {\n          method,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.novoTipo)\n        });\n        const body = await res.json();\n        if (!res.ok) throw new Error(body.message || res.statusText);\n        this.mensagem = this.editandoTipoId ? 'Tipo atualizado com sucesso!' : 'Tipo adicionado com sucesso!';\n        this.tipoMensagem = 'sucesso';\n        this.novoTipo = {\n          nome: '',\n          descricao: ''\n        };\n        this.editandoTipoId = null;\n        this.carregarTipos();\n      } catch (err) {\n        this.mensagem = err.message;\n        this.tipoMensagem = 'erro';\n      }\n    },\n    editarTipo(tipo) {\n      this.novoTipo = {\n        ...tipo\n      };\n      this.editandoTipoId = tipo._id;\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    async apagarTipo(id) {\n      if (confirm('Deseja realmente apagar este tipo?')) {\n        try {\n          const res = await fetch(`http://localhost:3000/api/tipos/${id}`, {\n            method: 'DELETE'\n          });\n          if (!res.ok) throw new Error('Erro ao apagar tipo');\n          this.mensagem = 'Tipo apagado com sucesso!';\n          this.tipoMensagem = 'sucesso';\n          this.carregarTipos();\n        } catch (err) {\n          this.mensagem = err.message;\n          this.tipoMensagem = 'erro';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","novaCategoria","nome","descricao","novoTipo","categorias","tipos","editandoCategoriaId","editandoTipoId","mensagem","tipoMensagem","mounted","carregarCategorias","carregarTipos","methods","res","fetch","json","adicionarCategoria","url","method","headers","body","JSON","stringify","ok","Error","message","statusText","err","editarCategoria","categoria","_id","window","scrollTo","top","behavior","apagarCategoria","id","confirm","adicionarTipo","editarTipo","tipo","apagarTipo"],"sources":["C:\\Users\\heieb\\OneDrive\\Ambiente de Trabalho\\10ABRIL\\Projeto-PTR-PTI\\src\\components\\AddCatalogo.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <header>\r\n      <h1>FromU2Me</h1>\r\n      <nav>\r\n        <ul>\r\n          <li><router-link to=\"/home\">Início</router-link></li>\r\n          <li><a href=\"#produtos\">Produtos</a></li>\r\n          <li><a href=\"#contato\">Contato</a></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n\r\n    <section class=\"banner\">\r\n      <!-- Formulário de Categoria -->\r\n      <div>\r\n        <h2>{{ editandoCategoriaId ? 'Editar Categoria' : 'Adicionar Categoria' }}</h2>\r\n        <form @submit.prevent=\"adicionarCategoria\">\r\n          <input type=\"text\" v-model=\"novaCategoria.nome\" placeholder=\"Nome da categoria\" required />\r\n          <textarea v-model=\"novaCategoria.descricao\" placeholder=\"Descrição da categoria\"></textarea>\r\n          <button type=\"submit\">Salvar</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Lista de Categorias -->\r\n      <div>\r\n        <h3>Categorias Existentes</h3>\r\n        <ul>\r\n          <li v-for=\"categoria in categorias\" :key=\"categoria._id\">\r\n            {{ categoria.nome }} - {{ categoria.descricao }}\r\n            <button @click=\"editarCategoria(categoria)\">Editar</button>\r\n            <button @click=\"apagarCategoria(categoria._id)\">Apagar</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <!-- Formulário de Tipo -->\r\n      <div style=\"margin-top: 30px;\">\r\n        <h2>{{ editandoTipoId ? 'Editar Tipo' : 'Adicionar Tipo' }}</h2>\r\n        <form @submit.prevent=\"adicionarTipo\">\r\n          <input type=\"text\" v-model=\"novoTipo.nome\" placeholder=\"Nome do tipo\" required />\r\n          <textarea v-model=\"novoTipo.descricao\" placeholder=\"Descrição do tipo\"></textarea>\r\n          <button type=\"submit\">Salvar</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Lista de Tipos -->\r\n      <div>\r\n        <h3>Tipos Existentes</h3>\r\n        <ul>\r\n          <li v-for=\"tipo in tipos\" :key=\"tipo._id\">\r\n            {{ tipo.nome }} - {{ tipo.descricao }}\r\n            <button @click=\"editarTipo(tipo)\">Editar</button>\r\n            <button @click=\"apagarTipo(tipo._id)\">Apagar</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n\r\n    <div v-if=\"mensagem\" :class=\"['mensagem', tipoMensagem]\">\r\n      {{ mensagem }}\r\n    </div>\r\n\r\n    <section id=\"contato\" class=\"contato\">\r\n      <h2>Entre em contato</h2>\r\n      <p>Email: contato@fromu2me.com</p>\r\n      <p>Telefone: (11) 99999-9999</p>\r\n    </section>\r\n\r\n    <footer>\r\n      <p>&copy; 2025 Loja Tech - Todos os direitos reservados.</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n  \r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      novaCategoria: { nome: '', descricao: '' },\r\n      novoTipo: { nome: '', descricao: '' },\r\n      categorias: [],\r\n      tipos: [],\r\n      editandoCategoriaId: null,\r\n      editandoTipoId: null,\r\n      mensagem: '',\r\n      tipoMensagem: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    this.carregarCategorias();\r\n    this.carregarTipos();\r\n  },\r\n  methods: {\r\n    async carregarCategorias() {\r\n      const res = await fetch('http://localhost:3000/api/categorias');\r\n      this.categorias = await res.json();\r\n    },\r\n\r\n    async carregarTipos() {\r\n      const res = await fetch('http://localhost:3000/api/tipos');\r\n      this.tipos = await res.json();\r\n    },\r\n\r\n    async adicionarCategoria() {\r\n      const url = this.editandoCategoriaId\r\n        ? `http://localhost:3000/api/categorias/${this.editandoCategoriaId}`\r\n        : 'http://localhost:3000/api/categorias';\r\n\r\n      const method = this.editandoCategoriaId ? 'PUT' : 'POST';\r\n\r\n      try {\r\n        const res = await fetch(url, {\r\n          method,\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(this.novaCategoria)\r\n        });\r\n\r\n        const body = await res.json();\r\n        if (!res.ok) throw new Error(body.message || res.statusText);\r\n\r\n        this.mensagem = this.editandoCategoriaId\r\n          ? 'Categoria atualizada com sucesso!'\r\n          : 'Categoria adicionada com sucesso!';\r\n        this.tipoMensagem = 'sucesso';\r\n\r\n        this.novaCategoria = { nome: '', descricao: '' };\r\n        this.editandoCategoriaId = null;\r\n        this.carregarCategorias();\r\n      } catch (err) {\r\n        this.mensagem = err.message;\r\n        this.tipoMensagem = 'erro';\r\n      }\r\n    },\r\n\r\n    editarCategoria(categoria) {\r\n      this.novaCategoria = { ...categoria };\r\n      this.editandoCategoriaId = categoria._id;\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    },\r\n\r\n    async apagarCategoria(id) {\r\n      if (confirm('Deseja realmente apagar esta categoria?')) {\r\n        try {\r\n          const res = await fetch(`http://localhost:3000/api/categorias/${id}`, { method: 'DELETE' });\r\n          if (!res.ok) throw new Error('Erro ao apagar categoria');\r\n          this.mensagem = 'Categoria apagada com sucesso!';\r\n          this.tipoMensagem = 'sucesso';\r\n          this.carregarCategorias();\r\n        } catch (err) {\r\n          this.mensagem = err.message;\r\n          this.tipoMensagem = 'erro';\r\n        }\r\n      }\r\n    },\r\n\r\n    async adicionarTipo() {\r\n      const url = this.editandoTipoId\r\n        ? `http://localhost:3000/api/tipos/${this.editandoTipoId}`\r\n        : 'http://localhost:3000/api/tipos';\r\n\r\n      const method = this.editandoTipoId ? 'PUT' : 'POST';\r\n\r\n      try {\r\n        const res = await fetch(url, {\r\n          method,\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(this.novoTipo)\r\n        });\r\n\r\n        const body = await res.json();\r\n        if (!res.ok) throw new Error(body.message || res.statusText);\r\n\r\n        this.mensagem = this.editandoTipoId\r\n          ? 'Tipo atualizado com sucesso!'\r\n          : 'Tipo adicionado com sucesso!';\r\n        this.tipoMensagem = 'sucesso';\r\n\r\n        this.novoTipo = { nome: '', descricao: '' };\r\n        this.editandoTipoId = null;\r\n        this.carregarTipos();\r\n      } catch (err) {\r\n        this.mensagem = err.message;\r\n        this.tipoMensagem = 'erro';\r\n      }\r\n    },\r\n\r\n    editarTipo(tipo) {\r\n      this.novoTipo = { ...tipo };\r\n      this.editandoTipoId = tipo._id;\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    },\r\n\r\n    async apagarTipo(id) {\r\n      if (confirm('Deseja realmente apagar este tipo?')) {\r\n        try {\r\n          const res = await fetch(`http://localhost:3000/api/tipos/${id}`, { method: 'DELETE' });\r\n          if (!res.ok) throw new Error('Erro ao apagar tipo');\r\n          this.mensagem = 'Tipo apagado com sucesso!';\r\n          this.tipoMensagem = 'sucesso';\r\n          this.carregarTipos();\r\n        } catch (err) {\r\n          this.mensagem = err.message;\r\n          this.tipoMensagem = 'erro';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n  \r\n  \r\n\r\n<style scoped>\r\nheader {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#regisbtn {\r\n  padding: 10px 20px;\r\n  background-color: lightblue;\r\n  font-weight: bold;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n#regisbtn:hover {\r\n  background-color: #0d6efd;\r\n  color: white;\r\n}\r\n\r\nnav ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n\r\nnav ul li a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n\r\n.banner {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  background: linear-gradient(to right, #0d6efd, #6610f2);\r\n  color: #fff;\r\n}\r\n\r\n.produtos {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  padding: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.produto {\r\n  background: #fff;\r\n  padding: 15px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.produto img {\r\n  max-width: 100%;\r\n  border-radius: 5px;\r\n}\r\n\r\n.contato {\r\n  text-align: center;\r\n  padding: 40px 20px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\nfooter {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 40px;\r\n  font-size: 14px;\r\n}\r\n.mensagem {\r\n  margin: 20px auto;\r\n  padding: 15px;\r\n  width: fit-content;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  max-width: 400px;\r\n}\r\n\r\n.mensagem.sucesso {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.mensagem.erro {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}