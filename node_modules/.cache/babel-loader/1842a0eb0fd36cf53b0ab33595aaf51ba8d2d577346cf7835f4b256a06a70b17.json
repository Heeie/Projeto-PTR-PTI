{"ast":null,"code":"export default {\n  name: 'HomePage',\n  data() {\n    return {\n      novaCategoria: {\n        nome: '',\n        descricao: ''\n      },\n      novoTipo: {\n        nome: '',\n        descricao: ''\n      },\n      mensagem: '',\n      // ✅ Nova variável para exibir mensagens\n      tipoMensagem: '' // ✅ Sucesso ou erro\n    };\n  },\n  methods: {\n    adicionarCategoria() {\n      fetch('http://localhost:3000/api/categorias', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.novaCategoria)\n      }).then(async res => {\n        const body = await res.json();\n        if (!res.ok) {\n          throw new Error(body.message || res.status + res.text);\n        }\n        this.mensagem = 'Categoria adicionada com sucesso!';\n        this.tipoMensagem = 'sucesso';\n        this.novaCategoria = {\n          nome: '',\n          descricao: ''\n        };\n      }).catch(err => {\n        this.mensagem = err.message;\n        this.tipoMensagem = 'erro';\n      });\n    },\n    adicionarTipo() {\n      fetch('http://localhost:3000/api/tipos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.novoTipo)\n      }).then(async res => {\n        const body = await res.json();\n        if (!res.ok) {\n          throw new Error(body.message || res);\n        }\n        this.mensagem = 'Tipo adicionado com sucesso!';\n        this.tipoMensagem = 'sucesso';\n        this.novoTipo = {\n          nome: '',\n          descricao: ''\n        };\n      }).catch(err => {\n        this.mensagem = err.message;\n        this.tipoMensagem = 'erro';\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","novaCategoria","nome","descricao","novoTipo","mensagem","tipoMensagem","methods","adicionarCategoria","fetch","method","headers","body","JSON","stringify","then","res","json","ok","Error","message","status","text","catch","err","adicionarTipo"],"sources":["C:\\Users\\heieb\\OneDrive\\Ambiente de Trabalho\\10ABRIL\\Projeto-PTR-PTI\\src\\components\\AddCatalogo.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <header>\r\n        <h1>FromU2Me</h1>\r\n        <nav>\r\n          <ul>\r\n            <li><router-link to=\"/home\">Início</router-link></li>\r\n            <li><a href=\"#produtos\">Produtos</a></li>\r\n            <li><a href=\"#contato\">Contato</a></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n  \r\n      <section class=\"banner\">\r\n        <div>\r\n          <h2>Adicionar Categoria</h2>\r\n          <form @submit.prevent=\"adicionarCategoria\">\r\n            <input type=\"text\" v-model=\"novaCategoria.nome\" placeholder=\"Nome da categoria\" required />\r\n            <textarea v-model=\"novaCategoria.descricao\" placeholder=\"Descrição da categoria\"></textarea>\r\n            <button id=\"regisbtn\" type=\"submit\">Adicionar</button>\r\n          </form>\r\n        </div>\r\n  \r\n        <div style=\"margin-top: 30px;\">\r\n          <h2>Adicionar Tipo</h2>\r\n          <form @submit.prevent=\"adicionarTipo\">\r\n            <input type=\"text\" v-model=\"novoTipo.nome\" placeholder=\"Nome do tipo\" required />\r\n            <textarea v-model=\"novoTipo.descricao\" placeholder=\"Descrição do tipo\"></textarea>\r\n            <button id=\"regisbtn\" type=\"submit\">Adicionar</button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n          <div v-if=\"mensagem\" :class=\"['mensagem', tipoMensagem]\">\r\n      {{ mensagem }}\r\n    </div>\r\n\r\n  \r\n      <section id=\"contato\" class=\"contato\">\r\n        <h2>Entre em contato</h2>\r\n        <p>Email: contato@fromu2me.com</p>\r\n        <p>Telefone: (11) 99999-9999</p>\r\n      </section>\r\n  \r\n      <footer>\r\n        <p>&copy; 2025 Loja Tech - Todos os direitos reservados.</p>\r\n      </footer>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'HomePage',\r\n    data() {\r\n      return {\r\n        novaCategoria: {\r\n          nome: '',\r\n          descricao: ''\r\n        },\r\n        novoTipo: {\r\n          nome: '',\r\n          descricao: ''\r\n        },\r\n          mensagem: '',           // ✅ Nova variável para exibir mensagens\r\n    tipoMensagem: ''        // ✅ Sucesso ou erro\r\n      };\r\n    },\r\n    methods: {\r\n      adicionarCategoria() {\r\n        fetch('http://localhost:3000/api/categorias', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(this.novaCategoria)\r\n        })\r\n          .then(async res => {\r\n            const body = await res.json();\r\n\r\n            if (!res.ok) {\r\n              throw new Error(body.message || res.status+ res.text);\r\n            }\r\n\r\n            this.mensagem = 'Categoria adicionada com sucesso!';\r\n            this.tipoMensagem = 'sucesso';\r\n            this.novaCategoria = { nome: '', descricao: '' };\r\n          })\r\n          .catch(err => {\r\n            this.mensagem = err.message;\r\n            this.tipoMensagem = 'erro';\r\n          });\r\n      }\r\n      ,\r\n\r\n  \r\n    adicionarTipo() {\r\n      fetch('http://localhost:3000/api/tipos', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(this.novoTipo)\r\n      })\r\n        .then(async res => {\r\n          const body = await res.json();\r\n\r\n          if (!res.ok) {\r\n            throw new Error(body.message || res);\r\n          }\r\n\r\n          this.mensagem = 'Tipo adicionado com sucesso!';\r\n          this.tipoMensagem = 'sucesso';\r\n          this.novoTipo = { nome: '', descricao: '' };\r\n        })\r\n        .catch(err => {\r\n          this.mensagem = err.message;\r\n          this.tipoMensagem = 'erro';\r\n        });\r\n    }\r\n\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  \r\n\r\n<style scoped>\r\nheader {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#regisbtn {\r\n  padding: 10px 20px;\r\n  background-color: lightblue;\r\n  font-weight: bold;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n#regisbtn:hover {\r\n  background-color: #0d6efd;\r\n  color: white;\r\n}\r\n\r\nnav ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n\r\nnav ul li a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n\r\n.banner {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  background: linear-gradient(to right, #0d6efd, #6610f2);\r\n  color: #fff;\r\n}\r\n\r\n.produtos {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  padding: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.produto {\r\n  background: #fff;\r\n  padding: 15px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.produto img {\r\n  max-width: 100%;\r\n  border-radius: 5px;\r\n}\r\n\r\n.contato {\r\n  text-align: center;\r\n  padding: 40px 20px;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\nfooter {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 40px;\r\n  font-size: 14px;\r\n}\r\n.mensagem {\r\n  margin: 20px auto;\r\n  padding: 15px;\r\n  width: fit-content;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  max-width: 400px;\r\n}\r\n\r\n.mensagem.sucesso {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.mensagem.erro {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAkDE,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;QACbC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE;MACb,CAAC;MACDC,QAAQ,EAAE;QACRF,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE;MACb,CAAC;MACCE,QAAQ,EAAE,EAAE;MAAY;MAC9BC,YAAY,EAAE,EAAC,CAAS;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAAA,EAAG;MACnBC,KAAK,CAAC,sCAAsC,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACb,aAAa;MACzC,CAAC,EACEc,IAAI,CAAC,MAAMC,GAAE,IAAK;QACjB,MAAMJ,IAAG,GAAI,MAAMI,GAAG,CAACC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACP,IAAI,CAACQ,OAAM,IAAKJ,GAAG,CAACK,MAAM,GAAEL,GAAG,CAACM,IAAI,CAAC;QACvD;QAEA,IAAI,CAACjB,QAAO,GAAI,mCAAmC;QACnD,IAAI,CAACC,YAAW,GAAI,SAAS;QAC7B,IAAI,CAACL,aAAY,GAAI;UAAEC,IAAI,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAC;MAClD,CAAC,EACAoB,KAAK,CAACC,GAAE,IAAK;QACZ,IAAI,CAACnB,QAAO,GAAImB,GAAG,CAACJ,OAAO;QAC3B,IAAI,CAACd,YAAW,GAAI,MAAM;MAC5B,CAAC,CAAC;IACN;IAIFmB,aAAaA,CAAA,EAAG;MACdhB,KAAK,CAAC,iCAAiC,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACV,QAAQ;MACpC,CAAC,EACEW,IAAI,CAAC,MAAMC,GAAE,IAAK;QACjB,MAAMJ,IAAG,GAAI,MAAMI,GAAG,CAACC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACP,IAAI,CAACQ,OAAM,IAAKJ,GAAG,CAAC;QACtC;QAEA,IAAI,CAACX,QAAO,GAAI,8BAA8B;QAC9C,IAAI,CAACC,YAAW,GAAI,SAAS;QAC7B,IAAI,CAACF,QAAO,GAAI;UAAEF,IAAI,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAC;MAC7C,CAAC,EACAoB,KAAK,CAACC,GAAE,IAAK;QACZ,IAAI,CAACnB,QAAO,GAAImB,GAAG,CAACJ,OAAO;QAC3B,IAAI,CAACd,YAAW,GAAI,MAAM;MAC5B,CAAC,CAAC;IACN;EAEA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}