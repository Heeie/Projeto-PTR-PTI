{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      users: []\n      // Iniciar como array vazio \n    };\n  },\n  async created() {\n    try {\n      // Realizar a requisição para obter todos os usuários assim que o componente for criado\n      const response = await axios.get('http://localhost:3000/api/utilizadores/nome/' + this.username);\n      this.users = response.data; // Salvar os usuários na variável 'users'\n    } catch (error) {\n      console.error(\"Erro ao buscar usuários:\", error);\n    }\n  },\n  methods: {\n    goToHome(event) {\n      event.preventDefault(); // Impede o envio do formulário padrão\n\n      // Verificar se o usuário existe na lista\n      const user = this.users.find(user => user.username === this.username);\n      if (user && user.password === this.password) {\n        // Se as credenciais forem válidas, redireciona para a página inicial\n        this.$router.push('/home');\n      } else {\n        // Se as credenciais não forem válidas, mostra um erro\n        alert('Usuário ou senha incorretos.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","users","created","response","get","error","console","methods","goToHome","event","preventDefault","user","find","$router","push","alert"],"sources":["C:\\Users\\heieb\\OneDrive\\Ambiente de Trabalho\\10ABRIL\\Projeto-PTR-PTI\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <form @submit=\"goToHome\"> <!-- Impede o envio do formulário padrão -->\r\n      <div class=\"imgcontainer\">\r\n        <img src=\"/Images/smile.jpg\" alt=\"Avatar\" class=\"avatar\">\r\n        <h1>Login</h1>\r\n      </div>\r\n\r\n      <div class=\"container\">\r\n        <label for=\"uname\"><b>Username</b></label>\r\n        <input type=\"text\" v-model=\"username\" placeholder=\"Enter Username\" name=\"uname\" required />\r\n\r\n        <label for=\"psw\"><b>Password</b></label>\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" name=\"psw\" required />\r\n\r\n        <button id=\"btnLogin\" type=\"submit\">Login</button>\r\n\r\n        <label>\r\n          <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> Lembrar-me\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"container\" style=\"background-color:#f1f1f1\">\r\n        <button type=\"button\" class=\"cancelbtn\">Cancelar</button>\r\n        <span class=\"create\"><a href=\"#\">Criar uma nova conta</a></span>\r\n        <span class=\"psw\">Esqueceu a <a href=\"#\">password?</a></span>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      users: [],\r\n        // Iniciar como array vazio \r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Realizar a requisição para obter todos os usuários assim que o componente for criado\r\n      const response = await axios.get('http://localhost:3000/api/utilizadores/nome/' + this.username);\r\n      this.users = response.data;  // Salvar os usuários na variável 'users'\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar usuários:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    goToHome(event) {\r\n      event.preventDefault();  // Impede o envio do formulário padrão\r\n\r\n      // Verificar se o usuário existe na lista\r\n      const user = this.users.find(user => user.username === this.username);\r\n\r\n      if (user && user.password === this.password) {\r\n        // Se as credenciais forem válidas, redireciona para a página inicial\r\n        this.$router.push('/home');\r\n      } else {\r\n        // Se as credenciais não forem válidas, mostra um erro\r\n        alert('Usuário ou senha incorretos.');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n    font-family: 'Poppins', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #f8f9fa;\r\n    color: #333;\r\n}\r\nheader {\r\n    background: #0d6efd;\r\n    color: #fff;\r\n    padding: 20px;\r\n    text-align: center;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\nnav ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n}\r\nnav ul li {\r\n    display: inline;\r\n}\r\nnav ul li a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n}\r\n.banner {\r\n    text-align: center;\r\n    padding: 60px 20px;\r\n    background: linear-gradient(to right, #0d6efd, #6610f2);\r\n    color: #fff;\r\n}\r\n.produtos {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 20px;\r\n    padding: 40px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    \r\n}\r\n\r\n\r\nfooter {\r\n    background: #0d6efd;\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 20px;\r\n    margin-top: 40px;\r\n    font-size: 14px;\r\n}\r\n\r\nform {\r\n    border: 3px solid #f1f1f1;\r\n  }\r\n  \r\n  /* Full-width inputs */\r\n  input[type=text], input[type=password] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Set a style for all buttons */\r\n  button {\r\n    background-color: #04AA6D;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* Add a hover effect for buttons */\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n  \r\n  /* Extra style for the cancel button (red) */\r\n  .cancelbtn {\r\n    width: auto;\r\n    padding: 10px 18px;\r\n    background-color: #f44336;\r\n  }\r\n  \r\n  /* Center the avatar image inside this container */\r\n  .imgcontainer {\r\n    text-align: center;\r\n    margin: 24px 0 12px 0;\r\n  }\r\n  \r\n  /* Avatar image */\r\n  img.avatar {\r\n    width: 40%;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  /* Add padding to containers */\r\n  .container {\r\n    padding: 16px;\r\n  }\r\n  \r\n  /* The \"Forgot password\" text */\r\n  span.psw {\r\n    float: right;\r\n    padding-top: 16px;\r\n  }\r\n  \r\n  /* Change styles for span and cancel button on extra small screens */\r\n  @media screen and (max-width: 300px) {\r\n    span.psw {\r\n      display: block;\r\n      float: none;\r\n    }\r\n    .cancelbtn {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":";;;AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;MACL;IACJ,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,8CAA6C,GAAI,IAAI,CAACL,QAAQ,CAAC;MAChG,IAAI,CAACE,KAAI,GAAIE,QAAQ,CAACL,IAAI,EAAG;IAC/B,EAAE,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,QAAQA,CAACC,KAAK,EAAE;MACdA,KAAK,CAACC,cAAc,CAAC,CAAC,EAAG;;MAEzB;MACA,MAAMC,IAAG,GAAI,IAAI,CAACV,KAAK,CAACW,IAAI,CAACD,IAAG,IAAKA,IAAI,CAACZ,QAAO,KAAM,IAAI,CAACA,QAAQ,CAAC;MAErE,IAAIY,IAAG,IAAKA,IAAI,CAACX,QAAO,KAAM,IAAI,CAACA,QAAQ,EAAE;QAC3C;QACA,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,OAAO;QACL;QACAC,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}