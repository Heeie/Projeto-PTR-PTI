{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'CriarConta',\n  data() {\n    return {\n      form: {\n        nome: '',\n        senha: '',\n        email: '',\n        telefone: '',\n        nif: '',\n        nic: '',\n        morada: '',\n        genero: 'Masculino'\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      console.log('Formulário enviado:', this.form);\n      try {\n        const response = await fetch('http://localhost:3000/api/conta/conta', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.form)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Erro ao registrar utilizador');\n        }\n        const data = await response.json();\n        console.log('Utilizador salvo no MongoDB:', data);\n        alert('Utilizador registrado com sucesso!');\n\n        // Limpa o formulário após sucesso\n        this.resetForm();\n\n        // Redireciona para a página inicial ou de login\n        this.$router.push('/home');\n      } catch (error) {\n        console.error('Erro:', error);\n        alert('Erro ao registrar Utilizador: ' + error.message);\n      }\n    },\n    cancelForm() {\n      // Limpar o formulário ou redirecionar para outra página\n      this.$router.push('/'); // Exemplo de redirecionamento, se estiver usando Vue Router\n    },\n    resetForm() {\n      // Reseta os campos do formulário\n      this.form = {\n        nome: '',\n        senha: '',\n        email: '',\n        telefone: '',\n        nif: '',\n        nic: '',\n        morada: '',\n        genero: 'Masculino'\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","nome","senha","email","telefone","nif","nic","morada","genero","methods","submitForm","console","log","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","alert","resetForm","$router","push","message","cancelForm"],"sources":["C:\\Users\\heieb\\OneDrive\\Ambiente de Trabalho\\10ABRIL\\Projeto-PTR-PTI\\src\\components\\CriarConta.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <header>\r\n      <h1>FromU2Me</h1>\r\n    </header>\r\n\r\n    <section>\r\n      <div id=\"login\">\r\n        <form @submit.prevent=\"submitForm\">\r\n          <div class=\"imgcontainer\">\r\n            <img src=\"/Images/smile.jpg\" alt=\"Avatar\" class=\"avatar\" />\r\n            <h1>Criar Conta</h1>\r\n          </div>\r\n\r\n          <div class=\"container\">\r\n            <label for=\"nome\"><b>Nome</b></label>\r\n            <input type=\"text\" placeholder=\"Enter your name\" name=\"nome\" v-model=\"form.nome\" required />\r\n\r\n\r\n            <label for=\"senha\"><b>Password</b></label>\r\n            <input type=\"password\" placeholder=\"Enter password\" name=\"senha\" v-model=\"form.senha\" required />\r\n\r\n\r\n            <label for=\"email\"><b>Email</b></label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              v-model=\"form.email\"\r\n            />\r\n\r\n            <label for=\"telefone\"><b>Telefone</b></label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Introduza um número de Telefone\"\r\n              name=\"telefone\"\r\n              v-model=\"form.telefone\"\r\n            />\r\n\r\n            <label for=\"nif\"><b>NIF</b></label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Introduza um NIF\"\r\n              name=\"nif\"\r\n              v-model=\"form.nif\"\r\n              required\r\n            />\r\n\r\n            <label for=\"nic\"><b>NIC</b></label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Introduza um NIC\"\r\n              name=\"nic\"\r\n              v-model=\"form.nic\"\r\n              required\r\n            />\r\n\r\n            <label for=\"morada\"><b>Morada</b></label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Introduza uma morada\"\r\n              name=\"morada\"\r\n              v-model=\"form.morada\"\r\n              required\r\n            />\r\n\r\n            <label for=\"genero\">Gênero</label>\r\n            <select id=\"genero\" name=\"genero\" v-model=\"form.genero\">\r\n              <option value=\"Masculino\">Masculino</option>\r\n              <option value=\"Feminino\">Feminino</option>\r\n              <option value=\"Outro\">Outro</option>\r\n            </select>\r\n\r\n            <button type=\"submit\">Criar Conta</button>\r\n            <label>\r\n              <input type=\"checkbox\" checked=\"checked\" name=\"remember\" />\r\n              Remember me\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"container\" style=\"background-color:#f1f1f1\">\r\n            <button type=\"button\" class=\"cancelbtn\" @click=\"cancelForm\">Cancel</button>\r\n            <span class=\"create\"><a href=\"#\">Create a new User</a></span>\r\n            <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n\r\n    <footer>\r\n      <p>&copy; 2025 Loja Tech - Todos os direitos reservados.</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n  \r\n  <script>\r\nexport default {\r\n  name: 'CriarConta',\r\n  data() {\r\n    return {\r\n      form: {\r\n      nome: '',\r\n      senha: '',\r\n      email: '',\r\n      telefone: '',\r\n      nif: '',\r\n      nic: '',\r\n      morada: '',\r\n      genero: 'Masculino',\r\n    },\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      console.log('Formulário enviado:', this.form);\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/conta/conta', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(this.form),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || 'Erro ao registrar utilizador');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Utilizador salvo no MongoDB:', data);\r\n\r\n        alert('Utilizador registrado com sucesso!');\r\n\r\n        // Limpa o formulário após sucesso\r\n        this.resetForm();\r\n\r\n        // Redireciona para a página inicial ou de login\r\n        this.$router.push('/home');\r\n\r\n      } catch (error) {\r\n        console.error('Erro:', error);\r\n        alert('Erro ao registrar Utilizador: ' + error.message);\r\n      }\r\n    },\r\n\r\n    cancelForm() {\r\n      // Limpar o formulário ou redirecionar para outra página\r\n      this.$router.push('/'); // Exemplo de redirecionamento, se estiver usando Vue Router\r\n    },\r\n\r\n    resetForm() {\r\n      // Reseta os campos do formulário\r\n      this.form = {\r\n        nome: '',\r\n        senha: '',\r\n        email: '',\r\n        telefone: '',\r\n        nif: '',\r\n        nic: '',\r\n        morada: '',\r\n        genero: 'Masculino',\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nheader {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.imgcontainer {\r\n  text-align: center;\r\n  margin: 20px;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  padding: 20px;\r\n  max-width: 400px;\r\n  margin: auto;\r\n}\r\n\r\nbutton {\r\n  background: #0d6efd;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\nbutton:hover {\r\n  background: #084298;\r\n}\r\nbody {\r\n  font-family: 'Poppins', sans-serif;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #f8f9fa;\r\n  color: #333;\r\n}\r\nheader {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\nnav ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\nnav ul li {\r\n  display: inline;\r\n}\r\nnav ul li a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n.banner {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  background: linear-gradient(to right, #0d6efd, #6610f2);\r\n  color: #fff;\r\n}\r\n.produtos {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  padding: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  \r\n}\r\n\r\n\r\nfooter {\r\n  background: #0d6efd;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 40px;\r\n  font-size: 14px;\r\n}\r\n\r\nform {\r\n  border: 3px solid #f1f1f1;\r\n}\r\n\r\n/* Full-width inputs */\r\ninput[type=text], input[type=password] {\r\n  width: 100%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  display: inline-block;\r\n  border: 1px solid #ccc;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Set a style for all buttons */\r\nbutton {\r\n  background-color: #04AA6D;\r\n  color: white;\r\n  padding: 14px 20px;\r\n  margin: 8px 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n/* Add a hover effect for buttons */\r\nbutton:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n/* Extra style for the cancel button (red) */\r\n.cancelbtn {\r\n  width: auto;\r\n  padding: 10px 18px;\r\n  background-color: #f44336;\r\n}\r\n\r\n/* Center the avatar image inside this container */\r\n.imgcontainer {\r\n  text-align: center;\r\n  margin: 24px 0 12px 0;\r\n}\r\n\r\n/* Avatar image */\r\nimg.avatar {\r\n  width: 40%;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* Add padding to containers */\r\n.container {\r\n  padding: 16px;\r\n}\r\n\r\n/* The \"Forgot password\" text */\r\nspan.psw {\r\n  float: right;\r\n  padding-top: 16px;\r\n}\r\n\r\n/* Change styles for span and cancel button on extra small screens */\r\n@media screen and (max-width: 300px) {\r\n  span.psw {\r\n    display: block;\r\n    float: none;\r\n  }\r\n  .cancelbtn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  flex-direction: column; /* Coloca um botão em cima do outro */\r\n  align-items: center;     /* Alinha horizontalmente ao centro */\r\n  justify-content: center;\r\n  margin: 40px 0;\r\n  gap: 10px; /* Espaço entre os botões */\r\n}\r\n\r\n.button-container button {\r\n  width: 200px; /* Largura fixa para os botões */\r\n}\r\n\r\n</style>"],"mappings":";AAiGA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV;IACA,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACZ,IAAI,CAAC;MAC7C,IAAI;QACF,MAAMa,QAAO,GAAI,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnB,IAAI;QAChC,CAAC,CAAC;QAEF,IAAI,CAACa,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAMC,SAAQ,GAAI,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAI,IAAK,8BAA8B,CAAC;QACpE;QAEA,MAAMzB,IAAG,GAAI,MAAMc,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCX,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEb,IAAI,CAAC;QAEjD0B,KAAK,CAAC,oCAAoC,CAAC;;QAE3C;QACA,IAAI,CAACC,SAAS,CAAC,CAAC;;QAEhB;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAE5B,EAAE,OAAOJ,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BC,KAAK,CAAC,gCAA+B,GAAID,KAAK,CAACK,OAAO,CAAC;MACzD;IACF,CAAC;IAEDC,UAAUA,CAAA,EAAG;MACX;MACA,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC1B,CAAC;IAEDF,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAAC1B,IAAG,GAAI;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}