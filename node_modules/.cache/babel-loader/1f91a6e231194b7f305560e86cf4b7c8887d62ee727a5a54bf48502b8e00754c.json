{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      users: [],\n      // Lista de usuários\n      loading: true // Para controlar o estado de carregamento\n    };\n  },\n  async created() {\n    try {\n      // Realizar a requisição para obter todos os usuários assim que o componente for criado\n      const response = await axios.get('http://localhost:3000/api/utilizadores', {\n        withCredentials: true\n      });\n      this.users = response.data; // Salvar os usuários na variável 'users'\n      console.log(this.users);\n    } catch (error) {\n      console.error(\"Erro ao buscar usuários:\", error);\n    } finally {\n      this.loading = false; // Alterar o estado para carregamento concluído\n    }\n  },\n  methods: {\n    async goToHome(event) {\n      event.preventDefault();\n      try {\n        const response = await axios.post('http://localhost:3000/api/login', {\n          username: this.username,\n          password: this.password\n        }, {\n          withCredentials: true // <- IMPORTANTE\n        });\n\n        // Simula sucesso de login (ajuste se usar JWT)\n        const perfil = await axios.get('http://localhost:3000/api/perfil', {\n          withCredentials: true\n        });\n        console.log(perfil.data);\n\n        // ✅ Se login for bem-sucedido, guarda o token\n        const token = response.data.token;\n        localStorage.setItem('token', token); // Armazenar token no navegador\n\n        // Opcional: guardar também o nome do utilizador\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n\n        // Redirecionar para a Home\n        this.$router.push('/home');\n      } catch (error) {\n        console.error(\"Erro no login:\", error);\n        alert('Usuário ou senha incorretos.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","users","loading","created","response","get","withCredentials","console","log","error","methods","goToHome","event","preventDefault","post","perfil","token","localStorage","setItem","JSON","stringify","user","$router","push","alert"],"sources":["C:\\Users\\heieb\\OneDrive\\Ambiente de Trabalho\\10ABRIL\\Projeto-PTR-PTI\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <form @submit.prevent=\"goToHome\"> <!-- Impede o envio do formulário padrão -->\r\n      <div class=\"imgcontainer\">\r\n        <img src=\"/Images/smile.jpg\" alt=\"Avatar\" class=\"avatar\">\r\n        <h1>Login</h1>\r\n      </div>\r\n\r\n      <div class=\"container\">\r\n        <label for=\"uname\"><b>Username</b></label>\r\n        <input type=\"text\" v-model=\"username\" placeholder=\"Enter Username\" name=\"uname\" required />\r\n\r\n        <label for=\"psw\"><b>Password</b></label>\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" name=\"psw\" required />\r\n\r\n        <button id=\"btnLogin\" type=\"submit\">Login</button>\r\n\r\n        <label>\r\n          <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> Lembrar-me\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"container\" style=\"background-color:#f1f1f1\">\r\n        <button type=\"button\" class=\"cancelbtn\">Cancelar</button>\r\n        <span class=\"create\"><a href=\"#\">Criar uma nova conta</a></span>\r\n        <span class=\"psw\">Esqueceu a <a href=\"#\">password?</a></span>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- Exibição de Carregamento -->\r\n    <div v-if=\"loading\">Carregando...</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      users: [], // Lista de usuários\r\n      loading: true, // Para controlar o estado de carregamento\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // Realizar a requisição para obter todos os usuários assim que o componente for criado\r\n      const response = await axios.get('http://localhost:3000/api/utilizadores', {\r\n        withCredentials: true\r\n      });\r\n\r\n      \r\n\r\n      this.users = response.data;  // Salvar os usuários na variável 'users'\r\n      console.log(this.users);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar usuários:\", error);\r\n    } finally {\r\n      this.loading = false; // Alterar o estado para carregamento concluído\r\n    }\r\n  },\r\n  methods: {\r\n    async goToHome(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/login', {\r\n        username: this.username,\r\n        password: this.password,\r\n      }, {\r\n        withCredentials: true  // <- IMPORTANTE\r\n      });\r\n\r\n      // Simula sucesso de login (ajuste se usar JWT)\r\n    const perfil = await axios.get('http://localhost:3000/api/perfil', {\r\n      withCredentials: true\r\n    });\r\n\r\n    console.log(perfil.data);\r\n\r\n      // ✅ Se login for bem-sucedido, guarda o token\r\n      const token = response.data.token;\r\n      localStorage.setItem('token', token); // Armazenar token no navegador\r\n\r\n      // Opcional: guardar também o nome do utilizador\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n\r\n      // Redirecionar para a Home\r\n      this.$router.push('/home');\r\n    } catch (error) {\r\n      console.error(\"Erro no login:\", error);\r\n      alert('Usuário ou senha incorretos.');\r\n    }\r\n\r\n\r\n  } \r\n\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\nbody {\r\n    font-family: 'Poppins', sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #f8f9fa;\r\n    color: #333;\r\n}\r\nheader {\r\n    background: #0d6efd;\r\n    color: #fff;\r\n    padding: 20px;\r\n    text-align: center;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\nnav ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n}\r\nnav ul li {\r\n    display: inline;\r\n}\r\nnav ul li a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n}\r\n.banner {\r\n    text-align: center;\r\n    padding: 60px 20px;\r\n    background: linear-gradient(to right, #0d6efd, #6610f2);\r\n    color: #fff;\r\n}\r\n.produtos {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    gap: 20px;\r\n    padding: 40px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    \r\n}\r\n\r\n\r\nfooter {\r\n    background: #0d6efd;\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 20px;\r\n    margin-top: 40px;\r\n    font-size: 14px;\r\n}\r\n\r\nform {\r\n    border: 3px solid #f1f1f1;\r\n  }\r\n  \r\n  /* Full-width inputs */\r\n  input[type=text], input[type=password] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Set a style for all buttons */\r\n  button {\r\n    background-color: #04AA6D;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* Add a hover effect for buttons */\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n  \r\n  /* Extra style for the cancel button (red) */\r\n  .cancelbtn {\r\n    width: auto;\r\n    padding: 10px 18px;\r\n    background-color: #f44336;\r\n  }\r\n  \r\n  /* Center the avatar image inside this container */\r\n  .imgcontainer {\r\n    text-align: center;\r\n    margin: 24px 0 12px 0;\r\n  }\r\n  \r\n  /* Avatar image */\r\n  img.avatar {\r\n    width: 40%;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  /* Add padding to containers */\r\n  .container {\r\n    padding: 16px;\r\n  }\r\n  \r\n  /* The \"Forgot password\" text */\r\n  span.psw {\r\n    float: right;\r\n    padding-top: 16px;\r\n  }\r\n  \r\n  /* Change styles for span and cancel button on extra small screens */\r\n  @media screen and (max-width: 300px) {\r\n    span.psw {\r\n      display: block;\r\n      float: none;\r\n    }\r\n    .cancelbtn {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":";AAmCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MAAE;MACXC,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,wCAAwC,EAAE;QACzEC,eAAe,EAAE;MACnB,CAAC,CAAC;MAIF,IAAI,CAACL,KAAI,GAAIG,QAAQ,CAACN,IAAI,EAAG;MAC7BS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC;IACzB,EAAE,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,UAAU;MACR,IAAI,CAACP,OAAM,GAAI,KAAK,EAAE;IACxB;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMC,QAAQA,CAACC,KAAK,EAAE;MACtBA,KAAK,CAACC,cAAc,CAAC,CAAC;MAEtB,IAAI;QACF,MAAMT,QAAO,GAAI,MAAMP,KAAK,CAACiB,IAAI,CAAC,iCAAiC,EAAE;UACnEf,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,EAAE;UACDM,eAAe,EAAE,IAAG,CAAG;QACzB,CAAC,CAAC;;QAEF;QACF,MAAMS,MAAK,GAAI,MAAMlB,KAAK,CAACQ,GAAG,CAAC,kCAAkC,EAAE;UACjEC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAACO,MAAM,CAACjB,IAAI,CAAC;;QAEtB;QACA,MAAMkB,KAAI,GAAIZ,QAAQ,CAACN,IAAI,CAACkB,KAAK;QACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,EAAE;;QAEtC;QACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAChB,QAAQ,CAACN,IAAI,CAACuB,IAAI,CAAC,CAAC;;QAEhE;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAOd,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCe,KAAK,CAAC,8BAA8B,CAAC;MACvC;IAGF;EAEA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}